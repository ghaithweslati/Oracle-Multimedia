/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pointage;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author AlassaneOusmane
 */
public class ListAbsenceFrame1 extends javax.swing.JFrame {
    StringBuilder sb=null;
SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        Connection conn=null;
PreparedStatement requete=null;
ResultSet resultat=null;
Date d=new Date();

 private void Majtable(String sql){


        try {
            requete=(PreparedStatement) conn.prepareStatement(sql);
            resultat=requete.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(resultat));
          
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, ex);
           
        }


}
   
     private void remplirComboxPrivilege( ){

String sql="select * from privilege";
        try {
            requete=(PreparedStatement) conn.prepareStatement(sql);
            resultat=requete.executeQuery();
          
            while(resultat.next()){
            
            privilegecombox.addItem(resultat.getString("libelle") );
           
            }   
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

}
private void remplirComboxmatricule( ){

String sql="select matricule_personnel from personnel";
        try {
            requete=(PreparedStatement) conn.prepareStatement(sql);
            resultat=requete.executeQuery();
          
            while(resultat.next()){
            
            listmatricule.addItem(resultat.getString("matricule_personnel") );
           
            }   
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

}

    /**
     * Creates new form ListAbsenceFrame1
     */
    public ListAbsenceFrame1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadiodate = new javax.swing.JRadioButton();
        jRadionom = new javax.swing.JRadioButton();
        jRadiomatricule = new javax.swing.JRadioButton();
        jRadioprenom = new javax.swing.JRadioButton();
        jRadiofonction = new javax.swing.JRadioButton();
        champrecherche = new javax.swing.JTextField();
        privilegecombox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmtrecherche = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ladate = new com.toedter.calendar.JDateChooser();
        listmatricule = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        buttonGroup1.add(jRadiodate);
        jRadiodate.setSelected(true);
        jRadiodate.setText("Par Date");
        jRadiodate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadiodateMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRadionom);
        jRadionom.setText("Par Nom");
        jRadionom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadionomMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRadiomatricule);
        jRadiomatricule.setText("Par Matricule");
        jRadiomatricule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadiomatriculeMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRadioprenom);
        jRadioprenom.setText("Par Pr√©nom ");
        jRadioprenom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioprenomMouseClicked(evt);
            }
        });

        buttonGroup1.add(jRadiofonction);
        jRadiofonction.setText("Par Fonction");
        jRadiofonction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadiofonctionMouseClicked(evt);
            }
        });

        jLabel1.setText("Liste des absences");

        cmtrecherche.setText("Rechercher");
        cmtrecherche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmtrechercheMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jRadiodate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadionom)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioprenom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRadiofonction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(privilegecombox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadiomatricule)
                                .addGap(2, 2, 2)
                                .addComponent(ladate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(listmatricule, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(champrecherche)
                            .addComponent(cmtrecherche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 58, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(256, 256, 256))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadiodate)
                            .addComponent(jRadioprenom)
                            .addComponent(jRadionom)
                            .addComponent(jRadiofonction)
                            .addComponent(jRadiomatricule)
                            .addComponent(champrecherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ladate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(privilegecombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmtrecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listmatricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-747)/2, (screenSize.height-506)/2, 747, 506);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        conn=(Connection) mysqlConnect.ConnectionDB();
       listmatricule.setVisible(false);
        ladate.setDate(d);
      if(jRadiodate.isSelected())
      { ladate.setVisible(true);
      privilegecombox.setVisible(false);
      champrecherche.setVisible(false);
      }
        
        remplirComboxPrivilege( );
        remplirComboxmatricule( );
        
  
       // if(!jRadiofonction.isSelected())
         //   privilegecombox.setVisible(false);
        
        
    }//GEN-LAST:event_formWindowOpened

    private void cmtrechercheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmtrechercheMouseClicked
        // TODO add your handling code here:
        
      
 if(jRadiodate.isSelected()){
       sb=new StringBuilder(sdf.format(ladate.getDate()));
       String sql=" SELECT absence.matricule_personnel, nom, prenom, libelle as fonction, date_absence FROM absence,personnel,privilege WHERE privilege.id_privilege=personnel.id_privilege AND absence.matricule_personnel=personnel.matricule_personnel AND date_absence ='"+sb.toString()+"'";
       Majtable(sql);}
 else if(jRadionom.isSelected())
 {String sql=" SELECT absence.matricule_personnel, nom, prenom, libelle as fonction, date_absence FROM absence,personnel,privilege WHERE privilege.id_privilege=personnel.id_privilege AND absence.matricule_personnel=personnel.matricule_personnel AND nom='"+champrecherche.getText()+"'";
       Majtable(sql);
 }
 else if(jRadioprenom.isSelected())
 {String sql=" SELECT absence.matricule_personnel, nom, prenom, libelle as fonction, date_absence FROM absence,personnel,privilege WHERE privilege.id_privilege=personnel.id_privilege AND absence.matricule_personnel=personnel.matricule_personnel AND prenom='"+champrecherche.getText()+"'";
       Majtable(sql);
 }
 else if(jRadiomatricule.isSelected())
 {String sql=" SELECT absence.matricule_personnel, nom, prenom, libelle as fonction, date_absence FROM absence,personnel,privilege WHERE privilege.id_privilege=personnel.id_privilege AND absence.matricule_personnel=personnel.matricule_personnel AND absence.matricule_personnel='"+listmatricule.getSelectedItem()+"'";
       Majtable(sql);
 }
 else if(jRadiofonction.isSelected()){
     
 String sql="select personnel.matricule_personnel,nom,prenom,libelle,date_absence from privilege,absence,personnel where privilege.id_privilege=personnel.id_privilege and absence.matricule_personnel=personnel.matricule_personnel and privilege.libelle='"+privilegecombox.getSelectedItem().toString()+"'";;    
  
     if(privilegecombox.getSelectedItem().equals("professeur"))
          sql="SELECT  personnel.matricule_personnel,nom, prenom, entitule as Matiere, absence.hr_debut, absence.hr_fin, salle,date_absence"+
"  FROM personnel, privilege, dispenser, matiere,absence"+
" WHERE personnel.id_privilege = privilege.id_privilege"+
" AND privilege.libelle =  'professeur'"+
" AND personnel.matricule_personnel = dispenser.matricule_personnel"+
" AND matiere.code_matiere = dispenser.code_matiere AND absence.matricule_personnel=personnel.matricule_personnel";
   Majtable(sql);       
 }
    
    }//GEN-LAST:event_cmtrechercheMouseClicked

    private void jRadiodateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadiodateMouseClicked
        // TODO add your handling code here:
        privilegecombox.setVisible(false);
        champrecherche.setVisible(false);
        ladate.setVisible(true);
        listmatricule.setVisible(false);
    }//GEN-LAST:event_jRadiodateMouseClicked

    private void jRadionomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadionomMouseClicked
        // TODO add your handling code here:
        privilegecombox.setVisible(false);
        ladate.setVisible(false);
        listmatricule.setVisible(false);
        champrecherche.setVisible(true);
       
    }//GEN-LAST:event_jRadionomMouseClicked

    private void jRadioprenomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioprenomMouseClicked
        // TODO add your handling code here:
         champrecherche.setVisible(true);
        privilegecombox.setVisible(false);
        ladate.setVisible(false);
        listmatricule.setVisible(false);
    }//GEN-LAST:event_jRadioprenomMouseClicked

    private void jRadiomatriculeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadiomatriculeMouseClicked
        // TODO add your handling code here:
         champrecherche.setVisible(false);
         listmatricule.setVisible(true);
        privilegecombox.setVisible(false);
        ladate.setVisible(false);
    }//GEN-LAST:event_jRadiomatriculeMouseClicked

    private void jRadiofonctionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadiofonctionMouseClicked
        // TODO add your handling code here:
        listmatricule.setVisible(false);
         champrecherche.setVisible(false);
        privilegecombox.setVisible(true);
        ladate.setVisible(false);
    }//GEN-LAST:event_jRadiofonctionMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListAbsenceFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListAbsenceFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListAbsenceFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListAbsenceFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ListAbsenceFrame1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField champrecherche;
    private javax.swing.JButton cmtrecherche;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadiodate;
    private javax.swing.JRadioButton jRadiofonction;
    private javax.swing.JRadioButton jRadiomatricule;
    private javax.swing.JRadioButton jRadionom;
    private javax.swing.JRadioButton jRadioprenom;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser ladate;
    private javax.swing.JComboBox listmatricule;
    private javax.swing.JComboBox privilegecombox;
    // End of variables declaration//GEN-END:variables
}
